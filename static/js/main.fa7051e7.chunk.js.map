{"version":3,"sources":["components/Episodes.js","components/Pagination.js","components/Search.js","App.js","index.js"],"names":["Episodes","episodes","loading","searchResults","react_default","a","createElement","className","map","episode","key","id","name","air_date","Pagination","postsPerPage","totalPosts","paginate","pageNumbers","i","Math","ceil","push","number","onClick","href","Search","handleChange","searchTerm","type","placeholder","onChange","value","App","_React$useState","React","useState","_React$useState2","Object","slicedToArray","setSearchTerm","_useState","_useState2","setEpisodes","_useState3","_useState4","setLoading","_useState5","_useState6","currentPage","setCurrentPage","_useState7","useEffect","_ref","asyncToGenerator","regenerator_default","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","apply","this","arguments","fetchEpisodes","console","log","results","filter","toLowerCase","toString","includes","indexOfLastPost","indexOfFirstPost","currentPosts","slice","components_Search","e","target","components_Episodes","components_Pagination","length","pageNumber","rootElement","document","getElementById","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.fa7051e7.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Episodes = ({ episodes, loading, searchResults }) => {\r\n  if (loading) {\r\n    return <h2> Loading </h2>;\r\n  }\r\n\r\n  return (\r\n    <ul className=\"list-group mb-4 pa3\">\r\n      {episodes.map(episode => (\r\n        <li key={episode.id} className=\"list-group-item\">\r\n          {episode.episode}\r\n          <p> {episode.name} </p>\r\n          <p> {episode.air_date} </p>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default Episodes;\r\n","import React from \"react\";\r\n\r\nconst Pagination = ({ postsPerPage, totalPosts, paginate }) => {\r\n  const pageNumbers = [];\r\n\r\n  for (let i = 1; i <= Math.ceil(totalPosts / postsPerPage); i++) {\r\n    pageNumbers.push(i);\r\n  }\r\n\r\n  return (\r\n    <nav>\r\n      <ul className=\"pagination\">\r\n        {pageNumbers.map(number => (\r\n          <li key={number} className=\"page-item\">\r\n            <a onClick={() => paginate(number)} href=\"!#\" className=\"page-link\">\r\n              {number}\r\n            </a>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","import React from \"react\";\r\n\r\nconst Search = ({ handleChange, searchTerm }) => {\r\n  return (\r\n    <input\r\n      className=\" ba b--green bg-lightest-blue pa3 pb3\"\r\n      type=\"search\"\r\n      placeholder=\"Search Episodes\"\r\n      onChange={handleChange}\r\n      value={searchTerm}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import React, { useState, useEffect } from \"react\";\nimport \"./styles.css\";\nimport axios from \"axios\";\nimport Episodes from \"./components/Episodes\";\nimport Pagination from \"./components/Pagination\";\nimport Search from \"./components/Search\";\n\nexport default function App() {\n  const [searchTerm, setSearchTerm] = React.useState(\"\");\n  // const [searchResults, setSearchResults] = React.useState([]);\n  const [episodes, setEpisodes] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [postsPerPage] = useState(10);\n\n  useEffect(() => {\n    const fetchEpisodes = async () => {\n      setLoading(true);\n      const res = await axios.get(\n        \"https://rickandmortyapi.com/api/episode/[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33]\"\n      );\n      setEpisodes(res.data);\n      setLoading(false);\n    };\n\n    fetchEpisodes();\n  }, []);\n\n  console.log(episodes);\n\n  const handleChange = e => {\n    setSearchTerm(e.target.value);\n  };\n\n  React.useEffect(() => {\n    const results = episodes.filter(episode =>\n      episode.name\n        .toLowerCase()\n        .toString()\n        .includes(searchTerm.toLowerCase())\n    );\n    setEpisodes(results);\n  }, [searchTerm]);\n\n  const indexOfLastPost = currentPage * postsPerPage;\n\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\n\n  const currentPosts = episodes.slice(indexOfFirstPost, indexOfLastPost);\n\n  //change page\n\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n\n  return (\n    <div className=\"container mt-5 \">\n      <h1 className=\"text-primary mb-3 tc \">Rick and Morty Episodes</h1>\n\n      <div className=\"tc \">\n        <Search handleChange={handleChange} searchTerm={searchTerm} />\n      </div>\n\n      <Episodes\n        episodes={currentPosts}\n        loading={loading}\n        // searchResults={searchResults}\n      />\n      <Pagination\n        postsPerPage={postsPerPage}\n        totalPosts={episodes.length}\n        paginate={paginate}\n      />\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"tachyons\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}